################################################################################
# Copyright Â© 2013-2015 The Nxt Core Developers.                               #
#                                                                              #
# See the AUTHORS.txt, DEVELOPER-AGREEMENT.txt and LICENSE.txt files at        #
# the top-level directory of this distribution for the individual copyright    #
# holder information and the developer policies on copyright and licensing.    #
#                                                                              #
# Unless otherwise agreed in a custom licensing agreement, no part of the      #
# Nxt software, including this file, may be copied, modified, propagated,      #
# or distributed except according to the terms contained in the LICENSE.txt    #
# file.                                                                        #
#                                                                              #
# Removal or modification of this copyright notice is prohibited.              #
#                                                                              #
################################################################################

# Do not modify this file. Instead, create a nxt.properties file with only the
# properties you need to change, and set them there. The values in 
# nxt.properties override those in nxt-default.properties.



#### PEER NETWORKING ####

# Announce my IP address/hostname to peers and allow them to share it with other
# peers. If disabled, peer networking servlet will not be started at all.
nxt.shareMyAddress=true

# Port for incoming peer to peer networking requests, if enabled.
nxt.peerServerPort=7874

# Host interface on which to listen for peer networking requests, default all.
# Use 0.0.0.0 to listen on all IPv4 interfaces or :: to listen on all IPv4 and
# IPv6 interfaces
nxt.peerServerHost=0.0.0.0

# My externally visible IP address or host name, to be announced to peers.
# It can optionally include a port number, which will also be announced to
# peers, and may be different from nxt.peerServerPort (useful if you do port
# forwarding behind a router).
nxt.myAddress=jnxt.org

# My platform, to be announced to peers.
nxt.myPlatform=JONES

# My hallmark, if available.
nxt.myHallmark=

# Default initial peers. Only used if nxt.usePeersDb=true.
# Do not modify. Add custom peers to nxt.wellKnownPeers instead.
nxt.defaultPeers=194.135.95.148; 85.214.222.82; 173.224.126.254; 194.135.95.149; 89.133.34.109; 185.69.54.117; \
  185.69.54.118; 185.69.54.119; 95.60.149.149; 37.139.5.199; 92.222.22.16; nxt.cryonet.de; 195.154.127.172; \
  194.135.95.150; 194.135.95.151; 194.135.95.153; 194.135.95.154; 185.69.54.110; 185.69.54.111; 185.69.54.112; \
  185.69.54.113; 185.69.54.126; timekoin1.funkymonkey.org; 185.69.54.127; lamanna.no-ip.org; 185.69.54.128; \
  192.99.35.133; nxtx.ru; nxt4.y.cz; 85.25.198.120; 89.212.19.49; 89.72.57.246; 185.69.54.120; 185.69.54.121; \
  151.80.162.72:3001; 185.69.54.124; girona2nxtgig.ddns.net; 217.23.6.2; gunka.szn.dk; 162.243.242.8; 84.242.91.139; \
  dilnu.szn.dk; beor.homeip.net; 178.62.175.175; 167.114.113.249; 104.219.53.3; 91.121.150.75; 108.61.57.76; \
  185.69.54.103; 185.69.54.104; 185.69.54.105; 80.153.101.190; enricoip.no-ip.biz:65074; 185.69.54.109; \
  202.96.138.246; nxt.sx; nxt.cybermailing.com; 192.3.158.120; 91.202.253.240; 46.28.111.249; 124.135.104.190; \
  80.150.243.95; 80.150.243.97; 80.150.243.99; 80.150.243.12; 185.69.54.101; 80.150.243.13; 185.69.54.102; \
  finnikola.ddns.net; 52.28.97.208; node0.forgenxt.com; gironanxtgig.ddns.net; perky.homeip.net:60693; 46.108.156.144; \
  192.52.166.170; 185.69.54.151; silvanoip.dhcp.biz; home.kaerner.net; 178.15.99.67; 5.9.155.145; banli.szn.dk; \
  serras.homenet.org; 87.139.122.48; nxt1.y.cz; 191.238.101.73; nxt.dyne.org; 113.106.85.172; 87.139.122.157; \
  37.120.168.204; ct.flipflop.mooo.com; 185.69.54.136; 185.69.54.138; 198.105.122.160; 173.254.228.133:21518; \
  108.61.184.187; 84.253.125.186; 95.85.31.45; 176.94.115.161; 91.239.69.78; 162.243.145.83; 92.222.72.98; \
  185.69.54.135; 178.33.203.157; nxt.noip.me; sluni.szn.dk; 5.249.139.71; 190.10.9.166; 23.102.0.45; \
  megaman.thican.net; 54.213.222.141; humanoide.thican.net; 106.187.102.227; 37.59.14.7; 52.0.72.67; 104.130.7.74; \
  192.99.68.108; 185.69.54.140; 185.69.54.141; 185.69.54.142; 185.69.54.143; 107.170.43.82; 162.243.122.251; \
  104.236.82.139; 174.140.167.239; 104.193.41.253; 99.227.137.145; 131.72.136.251; 69.163.40.132; 85.214.46.47; \
  23.88.59.163; raspi2nxtnode.ddns.net; nxt01.now.im; 109.87.255.75; 77.88.208.12; scripterron.dyndns.biz; \
  bug.airdns.org; 23.88.59.40; miasik.no-ip.org; cryptkeeper.vps.nxtcrypto.org; 174.140.167.75;

# A list of well known peer addresses / host names, separated by '; '.
nxt.wellKnownPeers=

# Known bad peers to be blacklisted
nxt.knownBlacklistedPeers=

# Default initial peers used for testnet only. Only used if nxt.usePeersDb=true.
# Do not modify. Add custom testnet peers to nxt.testnetPeers instead.
nxt.defaultTestnetPeers=nxt.scryptmh.eu; 54.186.98.117; 178.150.207.53; 192.241.223.132; node9.mynxtcoin.org; node10.mynxtcoin.org; \
  node3.mynxtcoin.org; 109.87.169.253; nxtnet.fr; 50.112.241.97; 2.84.142.149; bug.airdns.org; 83.212.103.14; 62.210.131.30; \
  104.131.254.22; 46.28.111.249; 94.79.54.205; 174.140.168.136; 107.170.3.62; node1.forgenxt.com; 5.196.1.215; nxt01.now.im; \
  37.139.6.166; scripterron.dyndns.biz; 107.170.3.62; scripterron.dyndns.org; petko.dlinkddns.com; 52.0.220.30; nxt.noip.me;

# Peers used for testnet only.
nxt.testnetPeers=

# Maximum number of inbound connections
nxt.maxNumberOfInboundConnections=250

# Maximum number of outbound connections
nxt.maxNumberOfOutboundConnections=50

# Maintain active connections with at least that many peers.
nxt.maxNumberOfConnectedPublicPeers=20

# Stop adding new peers when number of known peers exceeds that many.
nxt.maxNumberOfKnownPeers=2000

# Stop removing old peers when number of known peers drops below that many.
nxt.minNumberOfKnownPeers=1000

# Peer networking connect timeout for outgoing connections.
nxt.connectTimeout=10000

# Peer networking read timeout for outgoing connections.
nxt.readTimeout=20000

# Peer networking server idle timeout, milliseconds.
nxt.peerServerIdleTimeout=30000

# Use WebSocket connection if supported by the remote peer
nxt.useWebSockets=true

# WebSocket connection idle timeout (milliseconds)
nxt.webSocketIdleTimeout=900000

# Use the peer hallmark to only connect with peers above the defined push/pull
# hallmark thresholds.
# Disabling hallmark protection also disables weighting of peers by hallmark
# weight, so connecting to any of your peers becomes equally likely.
nxt.enableHallmarkProtection=true

# Hallmark threshold to use when sending data to peers.
nxt.pushThreshold=0

# Hallmark threshold to use when requesting data from peers.
nxt.pullThreshold=0

# Blacklist peers for 600000 milliseconds (i.e. 10 minutes by default).
nxt.blacklistingPeriod=600000

# Consider a new transaction or block sent after 10 peers have received it.
nxt.sendToPeersLimit=10

# Enable the Jetty Denial of Service Filter for the peer networking server.
nxt.enablePeerServerDoSFilter=true

# Compress Http responses for the peer networking server.
nxt.enablePeerServerGZIPFilter=true

# Use testnet, leave set to false unless you are really testing.
# Never unlock your real accounts on testnet! Use separate accounts for testing
# only.
# When using testnet, all custom port settings will be ignored,
# and hardcoded ports of 6874 (peer networking), 6875 (UI) and 6876 (API) will
# be used.
nxt.isTestnet=true

# Save known peers in the database
nxt.savePeers=true

# Set to false to disable use of the peers database and the default initial
# peers. This will not delete saved peers.
nxt.usePeersDb=true

# Set to false to disable getting more peers from the currently connected peers.
# Only useful when debugging and want to limit the peers to those in peersDb or
# wellKnownPeers.
nxt.getMorePeers=true

# Set to true to run offline - do not connect to peers and do not listen for
# incoming peer connections. This is equivalent to setting
# nxt.shareMyAddress=false, nxt.wellKnownPeers=, nxt.testnetPeers= 
# and nxt.usePeersDb=false, and if set to true overrides those properties.
nxt.isOffline=true

# Ignore peer announced addresses. Do not change unless you understand what it
# does.
nxt.ignorePeerAnnouncedAddress=false

# Only allow peer addresses starting with "fc". This is for users of cjdns only,
# do not set if you don't know what that is.
nxt.cjdnsOnly=false



#### API SERVER ####

# Accept http/json API requests.
nxt.enableAPIServer=true

# Hosts from which to allow http/json API requests, if enabled. Set to * to
# allow all. Can also specify networks in CIDR notation, e.g. 192.168.1.0/24.
nxt.allowedBotHosts=*

# Port for http/json API requests.
nxt.apiServerPort=7876

# Port for https/json API request. If same as nxt.apiServerPort, the nxt.apiSSL
# setting determines whether SSL is used or not.
nxt.apiServerSSLPort=7876

# Host interface on which to listen for http/json API request, default localhost
# only. Set to 0.0.0.0 to allow the API server to accept requests from all
# network interfaces.
nxt.apiServerHost=0.0.0.0

# Idle timeout for http/json API request connections, milliseconds.
nxt.apiServerIdleTimeout=30000

# Directory with html and javascript files for the new client UI, and admin
# tools utilizing the http/json API.
nxt.apiResourceBase=html/ui

# Default page for the API server.
nxt.apiWelcomeFile=index.html

# Java API documentation directory, optional.
nxt.javadocResourceBase=html/doc

# Enable Cross Origin Filter for the API server.
nxt.apiServerCORS=true

# Enable SSL for the API server (also need to set nxt.keyStorePath and
# nxt.keyStorePassword).
# Non-SSL connections will be disabled if nxt.apiServerSSLPort is equal to
# nxt.apiServerPort.
# Otherwise, both SSL and non-SSL connections will be accepted.
nxt.apiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
nxt.apiServerEnforcePOST=true

# Compress Http responses for the API server.
nxt.enableAPIServerGZIPFilter=false

# Password that should be provided when executing protected (administrative) API
# requests.
# Please choose a decent password here. Preferably, use a password generator.
# Password protection is disabled and password is not needed when the API server
# only listens on the localhost interface, i.e. when 
# nxt.apiServerHost=127.0.0.1.
nxt.adminPassword=

# Set to true to disable the password protection for admin API requests even
# when API server is publicly accessible. Not recommended.
nxt.disableAdminPassword=false

# The maximum number of records possible to retrieve with a single request. This
# restriction is not enforced if the admin password is provided, or is not
# needed (disabled or listening on localhost only).
nxt.maxAPIRecords=100

# API event registration timeout (seconds). The timeout is reset each time an
# event wait request is received from the application. The minimum value is 15
# seconds.
nxt.apiEventTimeout=300

# Maximum number of applications with active event registrations.
nxt.apiMaxEventUsers=32



#### OLD NRS USER INTERFACE ####

# Enable the deprecated NRS user interface.
nxt.enableUIServer=false

# Hosts from which to allow NRS user interface requests, if enabled. Set to * to
# allow all.
nxt.allowedUserHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for NRS user interface server.
nxt.uiServerPort=7875

# Host interface for NRS user interface server, default localhost only.
# Set to 0.0.0.0 to allow the UI to be accessed on all network interfaces.
nxt.uiServerHost=127.0.0.1

# Idle timeout for NRS user interface server, milliseconds.
nxt.uiServerIdleTimeout=30000

# Directory with html and javascript files for the NRS client user interface.
nxt.uiResourceBase=html/nrs

# Enable Cross Origin Filter for NRS user interface server.
nxt.uiServerCORS=false

# Enable SSL for the NRS user interface (also need to set nxt.keyStorePath and
# nxt.keyStorePassword).
nxt.uiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
nxt.uiServerEnforcePOST=true



#### DEBUGGING ####

# Log file, will be overwritten at every restart.
#nxt.log=nxt.log
# The log file is now specified in logging.properties.

# Enable debug log output.
#nxt.debug=false
# Debug logging is now specified in logging properties.

# Include caller traceback in log messages.
nxt.enableLogTraceback=false

# Enable logging of exception stack traces.
nxt.enableStackTraces=true

# Enable logging of Jetty messages.
#nxt.debugJetty=false
# Jetty logging is now specified in logging properties.

# Used for debugging peer to peer communications.
nxt.communicationLoggingMask=0

# Track balances of the following accounts and related events for debugging
# purposes.
nxt.debugTraceAccounts=

# File name for logging tracked account balances.
nxt.debugTraceLog=nxt-trace.csv

# Separator character for trace log.
nxt.debugTraceSeparator=\t

# Quote character for trace log.
nxt.debugTraceQuote="

# Log changes to unconfirmed balances.
nxt.debugLogUnconfirmed=false



#### DATABASE ####

# Database connection JDBC url, see the H2 documentation for possible
# customizations.
# Append ;AUTO_SERVER=TRUE to enable automatic mixed mode access.
# The nxt_db folder is expected to be in the current working directory, will be
# created if missing.
# nxt.dbUrl=jdbc:h2:nxt_db/nxt;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE

# Database connection JDBC url to use with the test network, if isTestnet=true.
# nxt.testDbUrl=jdbc:h2:nxt_test_db/nxt;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE

nxt.dbType=h2
nxt.testDbType=h2

nxt.dbDir=nxt_db/nxt
nxt.testDbDir=nxt_test_db/nxt

nxt.dbParams=DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE
nxt.testDbParams=DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE

nxt.dbUsername=sa
nxt.testDbUsername=sa

nxt.dbPassword=sa
nxt.testDbPassword=sa

# Database connection timeout in seconds.
nxt.dbLoginTimeout=70

# Database default lock timeout in seconds.
nxt.dbDefaultLockTimeout=60

# Maximum simultaneous database connections.
nxt.maxDbConnections=30

# The memory allocated to database cache, in kB.
# If set to 0, the cache size varies from a minimum of 16MB for heap sizes 160MB
# or less, to a maximum of 256MB for heap sizes 640MB or higher.
nxt.dbCacheKB=0

# Enable trimming of derived objects tables. Disabling this will significantly
# worsen performance.
nxt.trimDerivedTables=true

# If trimming is enabled, maintain enough previous height records to allow
# rollback of at least that many blocks. Cannot be set to less than 720.
# After increasing this value, a full re-scan also needs to be done in order for
# the previously trimmed records to be re-created and preserved.
nxt.maxRollback=800

# When trimming is enabled, it is run every nxt.trimFrequency blocks.
nxt.trimFrequency=1000

# Override the lifetime of prunable data to keep them longer, value in seconds.
# Set to -1 to disable pruning. Has no effect if set to less then the minimum
# required lifetime of two weeks (1209600 seconds) on mainnet, or 24 hours
# (86400 seconds) on testnet.
nxt.maxPrunableLifetime=0

# Always include prunable parts in transaction json, as long as still available,
# even if expired.
nxt.includeExpiredPrunable=false

# Threshold for logging database statements (milliseconds)
nxt.statementLogThreshold=10000

# Threshold for logging database transactions (milliseconds)
nxt.transactionLogThreshold=15000

# Log the average transaction time after this many minutes
nxt.transactionLogInterval=15


#### Blocks and transactions ####

# Delay generation of next block in order to accumulate more transactions in it.
# Waiting for much more than 15 s is not useful as transactions are allowed at
# most 15 s timestamp difference from the block they can be included in.
nxt.forgingDelay=20

# Generate and submit the next block before its hit time in response to
# receiving a lower difficulty block. Submitting the block more than 15 s before
# its time however will lead to its rejection.
nxt.forgingSpeedup=3

# Verify batches of blocks downloaded from a single peer with that many other
# peers.
nxt.numberOfForkConfirmations=2
nxt.testnetNumberOfForkConfirmations=0

# Enable re-broadcasting of new transactions until they are received back from
# at least one peer, or found in the blockchain. This feature can optionally be
# disabled, to avoid the risk of revealing that this node is the submitter of
# such re-broadcasted new transactions.
nxt.enableTransactionRebroadcasting=true

# Do not allow the number of unconfirmed transactions in memory to exceed this
# value. If exceeded, the same transaction ordering as when choosing which
# transactions to include in a forged block is used to decide which to keep in
# the unconfirmed pool.
# Set to 0 or negative for no limit.
nxt.maxUnconfirmedTransactions=2000



#### VOTING SYSTEM ####

# If disabled, polls are not processed at finish height and results are not
# stored in the database. When requested, poll results will be calculated
# on-the-fly, if the votes are still available.
nxt.processPolls=true



#### MINT ####

# Address of the NXT server to which the mint worker submits its transactions
# (default: localhost).
nxt.mint.serverAddress=

# Use Https when connecting to the server. Note that mint worker accepts any SSL
# certificate as valid, without checking hostname or certificate authority,
# therefore this will not protect you against a man-in-the-middle attack when
# submitting mint transactions.
nxt.mint.useHttps=false

# Specify a mintable currency code.
nxt.mint.currencyCode=

# Secret phrase for the minting account, this secret phrase is sent to the host
# specified by nxt.mint.serverAddress therefore do not specify secret phrase of
# an account with lots of funds.
nxt.mint.secretPhrase=

# Number of units to mint per transaction
# The minting difficulty grows linearly with the number of units per mint.
nxt.mint.unitsPerMint=1

# The initial nonce used for minting
# Set to 0 to start with a random nonce.
nxt.mint.initialNonce=0

# Number of concurrency threads used for minting
# Set to 0 allocate one thread per processor core.
nxt.mint.threadPoolSize=0

# When set to false mint transactions are not submitted when a hash is solved.
# Set this value to true to perform actual minting.
nxt.mint.isSubmitted=false

# When set to false the mint worker will resume operation even in case a mint
# transaction has returned an error response
nxt.mint.stopOnError=false



#### JETTY ####

# Settings for the Jetty Denial Of Service Filter, used for the peer networking
# server only.
nxt.peerServerDoSFilter.maxRequestsPerSec=30
nxt.peerServerDoSFilter.delayMs=1000
nxt.peerServerDoSFilter.maxRequestMs=300000

# keystore file and password, required if uiSSL or apiSSL are enabled.
nxt.keyStorePath=keystore
nxt.keyStorePassword=password



#### Developers only ####

# Force re-validation of blocks and transaction at start.
nxt.forceValidate=false

# Force re-build of derived objects tables at start.
nxt.forceScan=false

# Scale epoch time for faster forging. Only works when offline.
# nxt.timeMultiplier=1

# NRS version
nxt.version=1.5.10

